{
  "Understanding Ownership": {
    "_translate": "<a class=\"header\" href=\"#understanding-ownership\">理解所有权</a>",
    "_note": ""
  },
  "Ownership is Rust’s most unique feature and has deep implications for the rest of the language. It enables Rust to make memory safety guarantees without needing a garbage collector, so it’s important to understand how ownership works. In this chapter, we’ll talk about ownership as well as several related features: borrowing, slices, and how Rust lays data out in memory.": {
    "_translate": "所有权是 Rust 最独特的特性，对语言的其余部分有深远的影响。它使 Rust 能够在不需要垃圾回收器的情况下保证内存安全，因此理解所有权的工作原理非常重要。在本章中，我们将讨论所有权以及几个相关的特性：借用、切片以及 Rust 如何在内存中布局数据。",
    "_note": ""
  },
  "Understanding Ownership - The Rust Programming Language": {
    "_translate": "理解所有权 - 《Rust编程语言》",
    "_note": ""
  }
}