{
  "Installing Binaries with cargo install": {
    "_translate": "<a class=\"header\" href=\"#installing-binaries-with-cargo-install\">使用 <code>cargo install</code> 安装二进制文件</a>",
    "_note": ""
  },
  "All binaries installed with cargo install are stored in the installation root’s bin folder. If you installed Rust using rustup.rs and don’t have any custom configurations, this directory will be $HOME/.cargo/bin. Ensure that directory is in your $PATH to be able to run programs you’ve installed with cargo install.": {
    "_translate": "所有使用 <code>cargo install</code> 安装的二进制文件都存储在安装根目录的 <em>bin</em> 文件夹中。如果您使用 <em>rustup.rs</em> 安装了 Rust 并且没有任何自定义配置，此目录将是 <em>$HOME/.cargo/bin</em>。确保该目录在您的 <code>$PATH</code> 中，以便能够运行使用 <code>cargo install</code> 安装的程序。",
    "_note": ""
  },
  "The cargo install command allows you to install and use binary crates locally. This isn’t intended to replace system packages; it’s meant to be a convenient way for Rust developers to install tools that others have shared on crates.io. Note that you can only install packages that have binary targets. A binary target is the runnable program that is created if the crate has a src/main.rs file or another file specified as a binary, as opposed to a library target that isn’t runnable on its own but is suitable for including within other programs. Usually, crates have information in the README file about whether a crate is a library, has a binary target, or both.": {
    "_translate": "<code>cargo install</code> 命令允许您本地安装和使用二进制 crate。这并不是为了替代系统包；而是为了方便 Rust 开发者安装其他人分享在 <a href=\"https://crates.io/\">crates.io</a><!-- ignore --> 上的工具。请注意，您只能安装具有二进制目标的包。一个 <em>二进制目标</em> 是如果 crate 有一个 <em>src/main.rs</em> 文件或另一个指定为二进制的文件，则会创建可运行的程序，而库目标则不能单独运行，但适合包含在其他程序中。通常，crate 在 <em>README</em> 文件中会有信息说明该 crate 是库、具有二进制目标，还是两者都有。",
    "_note": ""
  },
  "For example, in Chapter 12 we mentioned that there’s a Rust implementation of the grep tool called ripgrep for searching files. To install ripgrep, we can run the following:": {
    "_translate": "例如，在第 12 章中我们提到有一个名为 <code>ripgrep</code> 的 Rust 实现的 <code>grep</code> 工具，用于搜索文件。要安装 <code>ripgrep</code>，我们可以运行以下命令：",
    "_note": ""
  },
  "The second-to-last line of the output shows the location and the name of the installed binary, which in the case of ripgrep is rg. As long as the installation directory is in your $PATH, as mentioned previously, you can then run rg --help and start using a faster, rustier tool for searching files!": {
    "_translate": "输出的倒数第二行显示了已安装二进制文件的位置和名称，对于<code>ripgrep</code>来说是<code>rg</code>。只要安装目录在您的<code>$PATH</code>中，如前所述，您就可以运行<code>rg --help</code>并开始使用更快、更“锈”的文件搜索工具！",
    "_note": ""
  },
  "Installing Binaries from Crates.io with cargo install - The Rust Programming Language": {
    "_translate": "使用 cargo install 从 Crates.io 安装二进制文件 - 《Rust 编程语言》",
    "_note": ""
  },
  "All binaries installed with cargo install are stored in the installation root’s bin folder. If you installed Rust using rustup.rs and don’t have any custom configurations, this directory will be $HOME/.cargo/bin. Ensure that directory is in your $PATHto be able to run programs you’ve installed withcargo install.": {
    "_translate": "所有使用 <code>cargo install</code> 安装的二进制文件都存储在安装根目录的 <em>bin</em> 文件夹中。如果您使用 <em>rustup.rs</em> 安装了 Rust 并且没有任何自定义配置，此目录将是 <em>$HOME/.cargo/bin</em>。确保该目录在您的 <code>$PATH</code> 中，以便能够运行使用 <code>cargo install</code> 安装的程序。",
    "_note": ""
  },
  "The second-to-last line of the output shows the location and the name of the installed binary, which in the case of ripgrep is rg. As long as the installation directory is in your $PATH, as mentioned previously, you can then run rg --help and start using a faster, Rustier tool for searching files!": {
    "_translate": "输出的最后一行显示了安装的二进制文件的位置和名称，对于<code>ripgrep</code>来说是<code>rg</code>。只要安装目录在你的<code>$PATH</code>中，如前所述，你就可以运行<code>rg --help</code>并开始使用更快、更Rust风格的文件搜索工具！",
    "_note": ""
  },
  "Installing Binaries with cargo install - The Rust Programming Language": {
    "_translate": "使用 cargo install 安装二进制文件 - 《Rust 编程语言》",
    "_note": ""
  }
}