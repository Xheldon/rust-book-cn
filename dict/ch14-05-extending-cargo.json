{
  "Extending Cargo with Custom Commands": {
    "_translate": "<a class=\"header\" href=\"#extending-cargo-with-custom-commands\">使用自定义命令扩展 Cargo</a>",
    "_note": ""
  },
  "Summary": {
    "_translate": "<a class=\"header\" href=\"#summary\">摘要</a>",
    "_note": ""
  },
  "Cargo is designed so you can extend it with new subcommands without having to modify Cargo. If a binary in your $PATH is named cargo-something, you can run it as if it was a Cargo subcommand by running cargo something. Custom commands like this are also listed when you run cargo --list. Being able to use cargo install to install extensions and then run them just like the built-in Cargo tools is a super convenient benefit of Cargo’s design!": {
    "_translate": "Cargo 的设计允许你在不修改 Cargo 的情况下扩展它，添加新的子命令。如果你的 <code>$PATH</code> 中有一个二进制文件名为 <code>cargo-something</code>，你可以通过运行 <code>cargo something</code> 来像运行 Cargo 子命令一样运行它。当你运行 <code>cargo --list</code> 时，这些自定义命令也会被列出。能够使用 <code>cargo install</code> 安装扩展，然后像内置的 Cargo 工具一样运行它们，这是 Cargo 设计的一个非常方便的好处！",
    "_note": ""
  },
  "Sharing code with Cargo and crates.io is part of what makes the Rust ecosystem useful for many different tasks. Rust’s standard library is small and stable, but crates are easy to share, use, and improve on a timeline different from that of the language. Don’t be shy about sharing code that’s useful to you on crates.io; it’s likely that it will be useful to someone else as well!": {
    "_translate": "与 Cargo 和 <a href=\"https://crates.io/\">crates.io</a><!-- ignore --> 共享代码是使 Rust 生态系统对许多不同任务有用的组成部分。Rust 的标准库很小且稳定，但可以轻松地在与语言不同的时间线上共享、使用和改进 crates。不要犹豫，将对你有用的代码共享到 <a href=\"https://crates.io/\">crates.io</a><!-- ignore -->；很可能它对其他人也有用！",
    "_note": ""
  },
  "Extending Cargo with Custom Commands - The Rust Programming Language": {
    "_translate": "使用自定义命令扩展 Cargo - 《Rust 编程语言》",
    "_note": ""
  },
  "Cargo is designed so you can extend it with new subcommands without having to modify it. If a binary in your $PATH is named cargo-something, you can run it as if it were a Cargo subcommand by running cargo something. Custom commands like this are also listed when you run cargo --list. Being able to use cargo install to install extensions and then run them just like the built-in Cargo tools is a super convenient benefit of Cargo’s design!": {
    "_translate": "Cargo 的设计允许你在不修改它的情况下扩展新的子命令。如果你的 <code>$PATH</code> 中有一个名为 <code>cargo-something</code> 的二进制文件，你可以通过运行 <code>cargo something</code> 来像运行 Cargo 子命令一样运行它。当你运行 <code>cargo --list</code> 时，这些自定义命令也会被列出。能够使用 <code>cargo install</code> 安装扩展，然后像内置的 Cargo 工具一样运行它们，这是 Cargo 设计的一个非常方便的好处！",
    "_note": ""
  },
  "Cargo is designed so you can extend it with new subcommands without having to modify it. If a binary in your $PATH is named cargo-something, you can run it as if it were a Cargo subcommand by running cargo something. Custom commands like this are also listed when you run cargo --list. Being able to use cargo install to install extensions and then run them just like the built-in Cargo tools is a super-convenient benefit of Cargo’s design!": {
    "_translate": "Cargo 的设计允许你在不修改它的情况下扩展新的子命令。如果你的 <code>$PATH</code> 中有一个名为 <code>cargo-something</code> 的二进制文件，你可以通过运行 <code>cargo something</code> 来像运行 Cargo 子命令一样运行它。当你运行 <code>cargo --list</code> 时，这些自定义命令也会被列出。能够使用 <code>cargo install</code> 安装扩展，然后像内置的 Cargo 工具一样运行它们，这是 Cargo 设计的一个非常方便的好处！",
    "_note": ""
  },
  "Cargo is designed so that you can extend it with new subcommands without having to modify it. If a binary in your $PATH is named cargo-something, you can run it as if it were a Cargo subcommand by running cargo something. Custom commands like this are also listed when you run cargo --list. Being able to use cargo install to install extensions and then run them just like the built-in Cargo tools is a super-convenient benefit of Cargo’s design!": {
    "_translate": "Cargo 的设计允许你在不修改它的情况下扩展新的子命令。如果你的 <code>$PATH</code> 中有一个二进制文件名为 <code>cargo-something</code>，你可以通过运行 <code>cargo something</code> 来像运行 Cargo 子命令一样运行它。当你运行 <code>cargo --list</code> 时，这些自定义命令也会被列出。能够使用 <code>cargo install</code> 安装扩展，然后像内置的 Cargo 工具一样运行它们，这是 Cargo 设计的一个非常方便的好处！",
    "_note": ""
  }
}